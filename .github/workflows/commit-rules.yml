name: Commit Rules

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  # Check commit message format
  commit-message:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install commitlint
        run: |
          npm install -g @commitlint/cli @commitlint/config-conventional
          
      - name: Create commitlint config
        run: |
          echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js
          
      - name: Check commit messages
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            git log ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --pretty=format:"%s" | while read commit_message; do
              echo "$commit_message" | npx commitlint
            done
          else
            git log -1 --pretty=format:"%s" | npx commitlint
          fi

  # Check code style and run tests
  code-quality:
    name: Code Quality and Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Check code style with Spotless
        run: ./gradlew spotlessCheck
        continue-on-error: true
        
      - name: Build and run tests
        run: ./gradlew build
